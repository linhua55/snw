#/bin/bash
#Sunny No Window
#Liscense: GPLv2
#作者: 蔡佳男
#Linux下一个能从基于光音网视高校云视频服务搭建的校园视频网获取视频下载地址的工具

#原理来自CampusNetworkVideoHunter https://github.com/sinsoul/CampusNetworkVideoHunter

#校园网视频地址
ADDRESS="http://10.0.12.252"
#视频信息xml存放位置
SNW_ROOT="$HOME/.snw"
#播放器
PLAYER="smplayer"

#错误提示
ERROR_MSG[1]="无法获取视频列表"
ERROR_MSG[2]="无此视频ID"
ERROR_MSG[3]="没有关键字"
ERROR_MSG[4]="关键字太短"
ERROR_MSG[5]="没有视频ID"
ERROR_MSG[6]="无效选项, 请输入 'swn hel'查看帮助"

#输出错误信息后结束
#参数1:错误码
function error ()
{
	echo "${ERROR_MSG[${1}]}"
	exit ${1}
}

#下载Total.xml 即视频列表
function refresh ()
{
	#文件不存在会有错误提示 所以要判断一下
	[ -f "${SNW_ROOT}/Total.xml" ] && xmlMD5=$(md5sum "${SNW_ROOT}/Total.xml")
	#wget -N 判断时间比本地的新才下载 -P 路径 -T 超时时间 -t 重试次数
	wget "${ADDRESS}/mov/xml/Total.xml" -T 20 -t 1 -NP "${SNW_ROOT}" &> /dev/null || error 1

	#用MD5码是否变化判断xml是否更新了
	if [[ "${xmlMD5}" != $(md5sum "${SNW_ROOT}/Total.xml") ]]; then
		echo "转换视频列表..."
		#下载成功则将其编码转为UTF-8, 再将dos换行转为unix换行
		iconv -c -f gb2312 -t UTF-8 "${SNW_ROOT}/Total.xml" -o "${SNW_ROOT}/Total_utf8.xml"
		#dos2unix信息不显示
		dos2unix "${SNW_ROOT}/Total_utf8.xml" &> /dev/null
		#去除首行(xml声明和根节点标签开头<root>) 行尾(根节点标签结尾</root>) 防止用户输入无效ID
		sed -i '1d;$d' "${SNW_ROOT}/Total_utf8.xml"

		echo "共有$(wc -l "${SNW_ROOT}/Total_utf8.xml" | cut -d ' ' -f 1)部视频"
	fi
}

#取xml节点内容
#参数1: 第几数
#参数2: 节点名
function get_xml_node ()
{
	sed -n "${1}p" "${SNW_ROOT}/Total_utf8.xml" | grep -Po "(?<=\<${2}\>).+(?=\</${2}\>)"
}

#取视频信息
#参数1: 视频ID, 其实就是行号
#参数2: 属性.
#一开始当c的常量写了--! 阴差阳错成了这样, 第二个参数是字符串, 比方说INFO_NAME整个就是字符串
function get_mov_info ()
{
	case ${2} in
		INFO_NAME)
			get_xml_node "${1}" 'a'
			;;
		INFO_TYPE)
			get_xml_node "${1}" 'g'
			;;
		INFO_KEY)
			get_xml_node "${1}" 'b'
			;;
		INFO_NUM)
			get_xml_node "${1}" 'h'
			;;
		INFO_ACTOR)
			get_xml_node "${1}" 'd'
			;;
		INFO_DIRECTOR)
			get_xml_node "${1}" 'c'
			;;
		INFO_COUNTRY)
			get_xml_node "${1}" 'f'
			;;
		INFO_SOURCE)
			get_xml_node "${1}" 'r'
			;;
		INFO_INTRODUCTION)
			get_xml_node "${1}" 's'
			;;
		*)
			echo "无效属性"
	esac
}

#搜索视频
#参数1: 视频ID
function search ()
{
	#没有关键词?
	if (($# < 1)); then
		error 3
	#关键词太短?
	#elif (( $(echo ${1} | wc -c) < 6 )); then
	#	error 4
	fi

	#所谓id就是行号
	lineNums=$(grep -n "${1}" "${SNW_ROOT}/Total_utf8.xml" |sort -u | cut -d ':' -f 1)

	echo ""
	if [[ "${lineNums}" = "" ]]; then
		echo "未找到视频"
	else
		echo " ID    | 片名                                               | 类型     | 集数"
		echo "-------+----------------------------------------------------+----------+-------"
		for id in ${lineNums}; do
			#先转gbk再转utf-8, 不然不能对齐
			movName=$(get_mov_info ${id} INFO_NAME | iconv -c -f UTF-8 -t gbk)
			movType=$(get_mov_info ${id} INFO_TYPE | iconv -c -f UTF-8 -t gbk)
			printf " %5d | %-50s | %-8s | " "${id}" "${movName}" "${movType}"| iconv -c -f gbk -t UTF-8
			get_mov_info ${id} INFO_NUM
		done
	fi
}

#播放视频
function play ()
{
	#没给ID?
	if (($# < 1)); then
		error 5
	fi

	#xml里总共有几个视频
	movTotal=$(wc -l "${SNW_ROOT}/Total_utf8.xml" | cut -d ' ' -f 1)

	#是否为有效ID
	if (("${1}" <= 0)) || (("$1" > "$movTotal")); then
		error 2
	fi

	#用于获取真是视频地址的Key
	movKey=$(get_mov_info ${1} INFO_KEY)
	movName=$(get_mov_info ${1} INFO_NAME)
	#这个视频有几集
	videoNum=$(get_mov_info ${1} INFO_NUM)

	#循环取地址
	for ((i=1;i<=videoNum;++i)); do
		tmpLink=$(wget -qO- "${ADDRESS}/xy_new.asp?a=$(expr ${i} - 1)&b=$movKey" |& grep -oP "(?<=\|\|\|).+(?=\|\|\|)")
		if [[ "$tmpLink" = "" ]]; then
			echo "${movName}第${i}集 未提供下载"
		else
			videoLinks="${videoLinks} ${tmpLink}"
			echo "${movName}第${i}集"
			echo "${tmpLink}"
		fi
	done
	${PLAYER} ${videoLinks}
}

#下载视频
function get ()
{
	#没给ID???
	if (($# < 1)); then
		error 5
	fi

	#xml里总共有几个视频
	movTotal=$(wc -l "${SNW_ROOT}/Total_utf8.xml" | cut -d ' ' -f 1)

	#ID是否有效?
	if (("${1}" <= 0)) || (("$1" > "$movTotal")); then
		error 2
	fi

	#用于获取真是视频地址的Key
	movKey=$(get_mov_info ${1} INFO_KEY)
	movName=$(get_mov_info ${1} INFO_NAME)
	#这个视频有几集
	videoNum=$(get_mov_info ${1} INFO_NUM)

	#参数大于一个, 看看是否有选项-n
	if (($# > 1)); then
		if (("${2}" == '-n')); then
			#过掉ID 和-n
			shift 2
			for i in $@; do
				if ((i>0)) && ((i<=videoNum)); then
					videoLink=$(wget -qO- "${ADDRESS}/xy_new.asp?a=$(expr ${i} - 1)&b=$movKey" |& grep -oP "(?<=\|\|\|).+(?=\|\|\|)")
					if [[ videoLink = "" ]]; then
						echo "${movName}第${i}未提供下载"
					else
						wget ${videoLink} -O "${movName}第${i}集.${videoLink##*.}"
					fi
				else
					echo "无效集数: " ${i}
				fi
			done
		else
			error 6
		fi
	else
		#只有一个参数, 循环取地址
		for ((i=1;i<=videoNum;++i)); do
			videoLink=$(wget -qO- "${ADDRESS}/xy_new.asp?a=$(expr ${i} - 1)&b=$movKey" |& grep -oP "(?<=\|\|\|).+(?=\|\|\|)")
			echo $videoLink
			if [[ ${videoLink} = "" ]]; then
				echo "${movName}第${i}未提供下载"
			else
				wget ${videoLink} -O "${movName}第${i}集.${videoLink##*.}"
			fi
		done
	fi

	echo "下载完成"
}

#打印视频信息
function info ()
{
	if (($# < 1)); then
		error 5
	fi
	#xml里总共有几个视频
	movTotal=$(wc -l "${SNW_ROOT}/Total_utf8.xml" | cut -d ' ' -f 1)
	if (("${1}" <= 0)) || (("$1" > "$movTotal")); then
		error 2
	fi

	echo " 片名: " $(get_mov_info ${1} INFO_NAME)
	echo " 类型: " $(get_mov_info ${1} INFO_TYPE)
	echo " 集数: " $(get_mov_info ${1} INFO_NUM)
	echo " 演员: " $(get_mov_info ${1} INFO_ACTOR)
	echo " 导演: " $(get_mov_info ${1} INFO_DIRECTOR)
	echo " 国家: " $(get_mov_info ${1} INFO_COUNTRY)
	echo " 简介: " $(get_mov_info ${1} INFO_SOURCE)
	echo " 来源: " $(get_mov_info ${1} INFO_INTRODUCTION)
}

#打印用法
function usage ()
{
	echo " 用法:"
	echo " snw <命令> [参数] <-命令选项> [选项值]"
	echo ""
	echo " 命令:"
	echo "      search, se             根据名称搜索 [参数] 关键词"
	echo "      infomation, info       电影信息 [参数] ID"
	echo "      play                   播放视频 [参数] ID"
	echo "      get [-n 第n集 ...]     使用wget下载视频 [参数] ID, -n指定下载 [选项值] 第n集"
	echo "      decode, dc             解密视频"
}

###########################  主程序  ##################################
#自动刷新 不用就不会下载
refresh 

#判断命令
case $1 in
	"se" | "search")
		search $2
		;;
	"play")
		play $2
		;;
	"get")
		shift 1
		get $@
		;;
	"info")
		info $2
		;;
	"dc" | "decode")
		shift 1
		snw-decode $@
		;;
	"help" | *)
		usage
		;;
esac
